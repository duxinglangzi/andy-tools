<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>com.andy</groupId>
    <artifactId>andy-tools</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>andy-tools</name>

    <properties>
        <!--设置工程的编码为utf8，此配置必须有，否则汉字无法编译 -->
        <!-- 这里做一次git commit -amend命令的测试  -->
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <commons.lang.version>2.6</commons.lang.version>
        <junit.version>4.13.1</junit.version>
        <fastjson.version>1.2.83</fastjson.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <!-- http包 -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>

        <!-- 对字符和字符串的各种操作 -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.2.0</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source> <!-- 源代码使用的开发版本 -->
                    <target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，
                    源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->

                    <!-- 这下面的是可选项 -->
                    <meminitial>256m</meminitial>
                    <maxmem>512m</maxmem>
                    <fork>true</fork> <!-- fork is enable,用于明确表示编译版本配置的可用 -->
                    <compilerVersion>1.3</compilerVersion>

                    <!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 -->
                    <!-- <compilerArgument>-verbose -bootclasspath ${java.home}\lib\rt.jar</compilerArgument> -->
                </configuration>
            </plugin>

            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <check />
                </configuration>
            </plugin>
            -->


        </plugins>
    </build>


</project>
